{"version":3,"sources":["components/dialogs/dialogs.module.scss","hoc/WithAuthRedirect.js","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","DialogItem","id","name","path","className","classes","dialogs__dialog","person__avatar","src","alt","person__name","person__text","Message","message","dialogs__message","maxLength30","maxLengthCreator","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","messages__text","component","Textarea","type","validate","required","messages__send","Dialogs","dialogs","messages","sendMessage","dialogsElement","map","d","messagesElements","m","dialogs__container","dialogs__items","dialogs__messages","messages__container","messages__create","formData","newMessage","compose","dialogsPage","messageText","newMessageText"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,mBAAqB,oCAAoC,eAAiB,gCAAgC,gBAAkB,iCAAiC,kBAAoB,mCAAmC,eAAiB,gCAAgC,aAAe,8BAA8B,aAAe,gC,qJCGzWC,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKC,MAAMC,OAER,cAACJ,EAAD,eAAeE,KAAKC,QAFG,cAAC,IAAD,CAAUE,GAAI,eAHT,GACXC,IAAMN,WAgBtC,OAFmCO,aANH,SAACC,GAC7B,MAAO,CACHJ,OAAQI,EAAMC,KAAKL,UAIyC,GAAjCG,CAAqCN,K,2FCA7DS,EAfI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjBC,EAAO,YAAcF,EACzB,OACI,sBAAKG,UAAWC,IAAQC,gBAAxB,UACI,qBAAKF,UAAWC,IAAQE,eAAxB,SACI,qBAAKC,IAAI,wFAAwFC,IAAI,OAEzG,qBAAKL,UAAWC,IAAQK,aAAxB,SACI,cAAC,IAAD,CAASN,UAAWC,IAAQM,aAAchB,GAAIQ,EAA9C,SAAqDD,UCFtDU,EANC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,qBAAKT,UAAWC,IAAQS,iBAAxB,SAA2CD,K,yCCI7CE,EAAcC,YAAiB,IAiD/BC,EAAmBC,YAAW,CAACC,KAAM,eAAlBD,EAVL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAClB,OACI,uBAAMC,SAAUD,EAAhB,UACI,cAACE,EAAA,EAAD,CAAOlB,UAAWC,IAAQkB,eAAgBC,UAAWC,IAC9CvB,KAAM,aAAcwB,KAAM,OAAQC,SAAU,CAACC,IAAUb,KAC9D,wBAAQX,UAAWC,IAAQwB,eAA3B,wBAOGC,EAjDC,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAavC,EAAY,EAAZA,OAE1CwC,EAAiBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYlC,KAAMkC,EAAElC,KAAMD,GAAImC,EAAEnC,IAASmC,EAAEnC,OAC7EoC,EAAmBL,EAASG,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASzB,QAASyB,EAAEzB,SAAcyB,EAAErC,OAM7E,OAAIP,EAMA,qBAAKU,UAAWC,IAAQ0B,QAAxB,SACI,sBAAK3B,UAAWC,IAAQkC,mBAAxB,UACI,qBAAKnC,UAAWC,IAAQmC,eAAxB,SACKN,IAEL,sBAAK9B,UAAWC,IAAQoC,kBAAxB,UACKJ,EAID,qBAAKjC,UAAS,UAAKC,IAAQ2B,SAAb,YAAyB3B,IAAQqC,qBAA/C,SACI,qBAAKtC,UAAWC,IAAQsC,iBAAxB,SACI,cAAC1B,EAAD,CAAkBI,SAtBpB,SAACuB,GACnBX,EAAYW,EAASC,2BAId,cAAC,IAAD,CAAUlD,GAAI,Y,yBCPdmD,sBACXjD,aATkB,SAACC,GACnB,MAAO,CACHiC,QAASjC,EAAMiD,YAAYhB,QAC3BC,SAAUlC,EAAMiD,YAAYf,SAC5BgB,YAAalD,EAAMiD,YAAYE,kBAKV,CAAChB,kBAC1B5C,IAFWyD,CAGbhB","file":"static/js/5.edba1b1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__TLaW_\",\"dialogs__container\":\"dialogs_dialogs__container__VFdfU\",\"dialogs__items\":\"dialogs_dialogs__items__1pCIM\",\"dialogs__dialog\":\"dialogs_dialogs__dialog__2gUGa\",\"dialogs__messages\":\"dialogs_dialogs__messages__HS3FE\",\"person__avatar\":\"dialogs_person__avatar__1ACqF\",\"person__name\":\"dialogs_person__name__1fTod\",\"person__text\":\"dialogs_person__text___OBz6\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const mapStateToPropsRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToPropsRedirect, {})(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport classes from '../dialogs.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    let path = \"/dialogs/\" + id;\r\n    return (\r\n        <div className={classes.dialogs__dialog}>\r\n            <div className={classes.person__avatar}>\r\n                <img src=\"https://cdn.britannica.com/q:60/92/181392-050-08187DB5/cat-British-Shorthair-grey.jpg\" alt=\"\"/>\r\n            </div>\r\n            <div className={classes.person__name}>\r\n                <NavLink className={classes.person__text} to={path}>{name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from '../dialogs.module.scss';\r\n\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={classes.dialogs__message}>{message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './dialogs.module.scss';\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport Message from \"./message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/controlForms/ControlForms\";\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst Dialogs = ({dialogs, messages, sendMessage, isAuth}) => {\r\n\r\n    let dialogsElement = dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    const onSendMessage = (formData) => {\r\n        sendMessage(formData.newMessage);\r\n    }\r\n\r\n    if(!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs__container}>\r\n                <div className={classes.dialogs__items}>\r\n                    {dialogsElement}\r\n                </div>\r\n                <div className={classes.dialogs__messages}>\r\n                    {messagesElements}\r\n\r\n                    {/*Create message*/}\r\n\r\n                    <div className={`${classes.messages} ${classes.messages__container}`}>\r\n                        <div className={classes.messages__create}>\r\n                            <DialogsReduxForm onSubmit={onSendMessage}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogsForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field className={classes.messages__text} component={Textarea}\r\n                   name={\"newMessage\"} type={\"text\"} validate={[required, maxLength30]}/>\r\n            <button className={classes.messages__send}>Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm( {form: 'sendMessage'} )(DialogsForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessage} from \"../../redux/reducers/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        messageText: state.dialogsPage.newMessageText,\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}